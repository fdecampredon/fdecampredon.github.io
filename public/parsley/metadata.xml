<?xml version="1.0" encoding="utf-8"?>
<annotations version="1.0">

	<metadata name="Inject" description="Metadata tag  that can be used on methods or properties for which dependency injection should be performed." >
		<context name="variable">
			<attribute name="id" type="String" showHint="false" 
				description="Specifies the id of the object to inject, if omitted injection by type is performed." />
			<attribute name="required" type="Boolean" defaultValue="true" hint="boolean" 
				description="Indicates whether the dependency is required, default if omitted: true."/>
		</context>
		<context name="setter" >
			<attribute name="id" type="String" showHint="false" 
				description="Specifies the id of the object to inject, if omitted injection by type is performed." />
			<attribute name="required" type="Boolean" defaultValue="true" hint="boolean" 
				description="Indicates whether the dependency is required, default if omitted: true."/>
		</context>
		<context name="method" />
	</metadata>
	
	<metadata name="InjectConstructor"  description="Metadata tag that can be used on clases for which constructor injection should be performed." >
		<context name="class" />
	</metadata>
	
	<metadata name="Publish" description="Set up a publisher on a managed object." >
		<context name="variable" />
		<context name="getter" >
			<attribute name="changeEvent" type="String" hint="events" />
		</context>
		<attribute name="objectId" type="String" showHint="false" 
				description="The id the property value is published with." />
		<attribute name="scope" type="String" showHint="false" 
				description="the scope the property value is published to."/>
		<attribute name="managed" type="Boolean" defaultValue="false" hint="boolean"
				description="Indicates whether the value published by this property should be added to the Context (turned into a managed object) while being published." />
	</metadata>
	<metadata name="PublishSubscribe" description="Let a property act as a publisher and subscriber at the same time.">
		<context name="variable" />
		<context name="getter" >
			<attribute name="changeEvent" type="String" hint="events" />
		</context>
		<attribute name="objectId" type="String" showHint="false" 
				description="The id the property value is published with." />
		<attribute name="scope" type="String" showHint="false" 
				description="the scope the property value is published to."/>
		<attribute name="managed" type="Boolean" defaultValue="false" hint="boolean"
				description="Indicates whether the value published by this property should be added to the Context (turned into a managed object) while being published." />
		<attribute name="persistent" type="Boolean" defaultValue="false" hint="boolean"
				description="Indicates whether the value published by this property should be persisted and automatically retrieved back when the application starts the next time. The default implementation is based on Local SharedObjects, but can be swapped." />
	</metadata>
	
	<metadata name="Subscribe" description="Set up a subscriber on a managed object" >
		<context name="variable" />
		<context name="getter" />
		<context name="setter" />
		<attribute name="objectId" type="String" showHint="false" 
				description="The id the property value is published with." />
		<attribute name="scope" type="String" showHint="false" 
				description="the scope the property value is published to."/>
	</metadata>
	
	<metadata name="MessageDispatcher" description="Metadata tag that can be used on properties where a message dispatcher function should be injected. This is an alternative to declaring managed events, useful when working with message types which do not extend flash.events.Event.">
		<context name="method" />
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
	</metadata>
	
	<metadata name="ManagedEvents" description="Metadata tag that can be used on classes that dispatch events that should be dispatched through Parsleys central message router. May only be place on classes that implement IEventDispatcher. The class definition should contain additional regular [Event] tags for all events it dispatches.">
		<context name="class" />
		<attribute name="type" type="Array" hint="events" />
		
	</metadata>
	
	<metadata name="MessageHandler" description="Metadata tag that can be used on methods which wish to handle messages dispatched through Parsleys central message router.">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated method wishes to receive. If omitted all messages will be received (rarely useful)."/>
		<attribute name="messageProperties" type="Array"
				description="if specified not the message itself will be passed to the method, but instead the listed properties of the message as method parameters."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="MessageBinding"  description="Metadata tag that can be used on properties which wish to be bound to a property value of a particular message type dispatched through Parsleys central message router">
		<context name="variable" />
		<context name="getter" />
		<context name="variable" />
		<attribute name="type" type="class" hint="classes" required="true"
				description="The type (class) of the message that the annotated property should be bound to."/>
		<attribute name="messageProperty" type="String" required="true"
				description="The name of the property of the message class whose value should be bound to the targetProperty."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	
	<metadata name="MessageInterceptor" description="Metadata tag that can be used on methods that want to intercept messages of a particular type dispatched through Parsleys central message router.">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated property should be bound to."/>
		<attribute name="messageProperties" type="Array"
				description="if specified not the message itself will be passed to the method, but instead the listed properties of the message as method parameters."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="MessageError" description="Metadata tag that can be used on methods that want to handle errors that were thrown by a regular message target or an interceptor.">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated property should be bound to."/>
		<attribute name="messageProperties" type="Array"
				description="if specified not the message itself will be passed to the method, but instead the listed properties of the message as method parameters."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	
	<metadata name="Command">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated method wishes to receive. If omitted the type will be deduced from the method parameter."/>
		<attribute name="messageProperties" type="Array"
				description="if specified not the message itself will be passed to the method, but instead the listed properties of the message as method parameters."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	
	<metadata name="CommandComplete" description="Metadata tag that can be used on methods which wish to execute asynchronous commands triggered by messages.">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated method wishes to receive. If omitted the type will be deduced from the method parameter."/>
		<attribute name="messageProperties" type="Array"
				description="if specified not the message itself will be passed to the method, but instead the listed properties of the message as method parameters."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="CommandResult" description="Metadata tag that can be used on methods which wish to be invoked when the result of a matching asynchronous command execution has been received." >
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated method wishes to receive. If omitted the type will be deduced from the method parameter."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="CommandError" description="Metadata tag that can be used on methods which wish to be invoked when a matching asynchronous command execution finished with an error.">
		<context name="method" />
		<attribute name="type" type="class" hint="classes" 
				description="The type (class) of the message that the annotated method wishes to receive. If omitted the type will be deduced from the method parameter."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="CommandStatus" description="Metadata tag that can be used on properties that serve as a flag for indicating whether any matching asynchronous command is currently active.">
		<context name="variable" />
		<context name="getter" />
		<context name="variable" />
		<attribute name="type" type="class" hint="classes" required="true"
				description="The type (class) of the message that the annotated method wishes to receive. If omitted the type will be deduced from the method parameter."/>
		<attribute name="selector" type="String" showHint="false" 
				description="An selector value for filtering in addition to message selection by type"/>
		<attribute name="scope" type="String" showHint="false" 
				description="The scope through which the message should be dispatched. If this attribute is omitted the message will be dispatched through all scopes associated with the Context the dispatching object lives in."/>
		<attribute name="order" type="Number" showHint="false" 
				description="The order in which handlers should be invoked. The default value is int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="AsyncInt" description="Metadata tag that can be used to mark an object as being asynchronously initializing.">
		<context name="class" />
		<attribute name="completeEvent" type="String" hint="events" defaultValue="complete"
				description="The event type signalling that the object is fully initialized. Default Event.COMPLETE."/>
		<attribute name="errorEvent" type="String" hint="events" defaultValue="error"
				description="The event type signalling that the object failed to initialize correctly. Default ErrorEvent.ERROR."/>
	</metadata>
	
	<metadata name="Init" description="Metadata tag that can be used on methods that should be invoked after the object has been created and fully configured.">
		<context name="method" />
	</metadata>
	
	<metadata name="Destroy" description="Metadata tag that can be used on methods that should be invoked when the Context that the object belongs to gets destroyed or when the object is removed from the Context.">
		<context name="method" />
	</metadata>
	
	<metadata name="Observe" description="Metadata tag that can be used on methods that should be invoked for lifecycle events of other objects.">
		<context name="method" />
		<attribute name="phase" type="String" values="preConfigure,preInit,preDestroy,postDestroy"
			description="The lifecycle phase to observe. The default is postInit. The other permitted values are preConfigure, preInit, preDestroy and postDestroy."/>
		<attribute name="objectId" type="String" showHint="false"
			description="The id of the object to observe. If omitted the observer method will be invoked for all matching types (polymorphically)."/>
	</metadata>
	
	<metadata name="ResourceBinding" description="Metadata tag that can be used to bind a property value to a resource, updating automatically when the ResourceManager updates.">
		<context name="variable" />
		<context name="getter" />
		<context name="setter" />
		<attribute name="bundle" type="String" showHint="false"
			description="The bundle name of the resource."/>
		<attribute name="key" type="String" showHint="false"
			description="The resource key."/>
	</metadata>
	
	<metadata name="Factory" description="Metadata tag that can be used to mark a method as a factory method.">
		<context name="method"/>
	</metadata>
	
	<metadata name="Target" description="Metadata tag that can be used in metadata configuration extensions. For any extension tag that can be place on properties or methods the framework will automatically set the value of the property marked with this tag to the name of the annotated method or property."> 
		<context name="variable"/>
		<context name="getter"/>
		<context name="setter"/>
	</metadata>
	
	<metadata name="ObjectDefinition" description="Metadata tag that can be used to specify additional configuration for object definitions in an ActionScript configuration class.">
		<context name="class"/>
		<attribute name="lazy" type="Boolean" hint="boolean" defaultValue="false" 
			description="When set to false (default) the object will be instantiated when the container initializes (but only if the singleton attribute keeps the default value (true). When set to true the object will be instantiated on demand."/>
		<attribute name="singleton" type="Boolean" hint="boolean" defaultValue="true"
			description="When set to true (default) the container will only create a single instance of the object, cache it internally and return the same instance upon each request. When set to false it will create a new instance upon each request."/>
		<attribute name="id" type="String" showInt="false"
			description="The id the object should be registered with. If omitted the name of the property that produces (or holds) the object will be used as the id."/>
		<attribute name="order" type="Number" showInt="false"
			description="he initialization order. Only considered for non-lazy singletons, processed in ascending order. Default int.MAX_VALUE."/>
	</metadata>
	
	<metadata name="Internal" description="Metadata tag that marks a property for exclusion when processing an ActionScript configuration.">
		<context name="variable"/>
		<context name="getter"/>
	</metadata>
</annotations>

